{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SSAFY DANCY API",
    "description" : "SSAFY 공통프로젝트 DANCY 에서 사용할 API 문서입니다.",
    "version" : "0.0.1"
  },
  "servers" : [ {
    "url" : "http://localhost:8080"
  } ],
  "tags" : [ ],
  "paths" : {
    "/auth" : {
      "delete" : {
        "tags" : [ "auth" ],
        "summary" : "회원 탈퇴",
        "description" : "회원 탈퇴 API 입니다.<br>올바른 비밀번호를 입력했을 때, 200 OK 와 함께 회원 탈퇴 처리되며, 로그아웃됩니다.<br>프론트앤드 영역에서 Access Token 을 직접 삭제시켜 주어야 합니다.<br>AUTH-TOKEN 이 유효하지 않거나, 값이 없을 경우 401 Unauthorized 가 반환됩니다.<br>기존 패스워드와 일치하지 않을 경우, 403 Forbidden 과 함께 패스워드가 일치하지 않는다는 메세지가 반환됩니다.",
        "operationId" : "auth_api_test/회원탈퇴_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk5LCJleHAiOjE3MDcwOTk1OTl9.VhEgE1hGxNVGxWtEL2x2zvMo-J4q8asA3iiqPoH_E1M"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-1994102425"
              },
              "examples" : {
                "auth_api_test/회원탈퇴_비밀번호불일치_403/" : {
                  "value" : "{\r\n  \"password\" : \"Asdf1234!!\"\r\n}"
                },
                "auth_api_test/회원탈퇴_성공_200/" : {
                  "value" : "{\r\n  \"password\" : \"Test1122!\"\r\n}"
                },
                "auth_api_test/회원탈퇴_토큰없음_401/" : {
                  "value" : "{\r\n  \"password\" : \"Test1122!\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/회원탈퇴_비밀번호불일치_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"기존 비밀번호가 일치하지 않습니다.\",\r\n  \"errorType\" : \"UserPasswordNotMatchException\",\r\n  \"fieldName\" : \"currentPassword\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200"
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "auth_api_test/회원탈퇴_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/change" : {
      "put" : {
        "tags" : [ "auth" ],
        "summary" : "비밀번호 변경",
        "description" : "비밀번호를 변경하는 API 입니다.<br>비밀번호 변경에 성공한다면, 200 OK 와 함께 로그아웃 처리됩니다.<br>프론트앤드 영역에서 Access Token 을 직접 삭제시켜 주어야 합니다.<br>바꾸고자 하는 비밀번호가 정규표현식을 만족하지 못하는 경우, 400 Bad Request 와 함께 에러 메세지가 반환됩니다.<br>AUTH-TOKEN 이 유효하지 않거나, 값이 없을 경우 401 Unauthorized 가 반환됩니다.<br>A기존 패스워드와 일치하지 않을 경우, 403 Forbidden 과 함께 패스워드가 일치하지 않는다는 메세지가 반환됩니다.",
        "operationId" : "auth_api_test/비밀번호변경_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk5LCJleHAiOjE3MDcwOTk1OTl9.VhEgE1hGxNVGxWtEL2x2zvMo-J4q8asA3iiqPoH_E1M"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-change1195549048"
              },
              "examples" : {
                "auth_api_test/비밀번호변경_비밀번호불일치_403/" : {
                  "value" : "{\r\n  \"currentPassword\" : \"asdfasdf\",\r\n  \"newPassword\" : \"Asdf1234!!\"\r\n}"
                },
                "auth_api_test/비밀번호변경_성공_200/" : {
                  "value" : "{\r\n  \"currentPassword\" : \"Test1122!\",\r\n  \"newPassword\" : \"Asdf1234!!\"\r\n}"
                },
                "auth_api_test/비밀번호변경_정규표현식_불만족_400/" : {
                  "value" : "{\r\n  \"currentPassword\" : \"Test1122!\",\r\n  \"newPassword\" : \"asdfasdf\"\r\n}"
                },
                "auth_api_test/비밀번호변경_토큰없음_401/" : {
                  "value" : "{\r\n  \"currentPassword\" : \"Test1122!\",\r\n  \"newPassword\" : \"Asdf1234!!\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/비밀번호변경_비밀번호불일치_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"기존 비밀번호가 일치하지 않습니다.\",\r\n  \"errorType\" : \"UserPasswordNotMatchException\",\r\n  \"fieldName\" : \"currentPassword\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200"
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/비밀번호변경_정규표현식_불만족_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"비밀번호는 8자리 이상, 영문, 숫자, 특수문자 조합이어야 합니다.\",\r\n  \"errorType\" : \"Password\",\r\n  \"fieldName\" : \"newPassword\"\r\n} ]"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "auth_api_test/비밀번호변경_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "로그인",
        "description" : "로그인을 진행하는 API 입니다.<br>로그인에 성공한다면, 200 OK 와 함께 Access Token 과 Refresh Token, 인증타입, 토큰타입 정보가 반환됩니다.<br>아이디나 비밀번호가 일치하지 않는다면, 404 Not Found 가 반환됩니다.",
        "operationId" : "auth_api_test/로그인",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-login-83566640"
              },
              "examples" : {
                "auth_api_test/로그인_정보불일치_404/" : {
                  "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"password\" : \"asdfasdf\"\r\n}"
                },
                "auth_api_test/로그인성공_200/" : {
                  "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"password\" : \"Test1122!\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/로그인_정보불일치_404/" : {
                    "value" : "[ {\r\n  \"message\" : \"아이디나 패스워드가 일치하지 않습니다.\",\r\n  \"errorType\" : \"UserInfoNotMatchException\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-password-check328342784"
                },
                "examples" : {
                  "auth_api_test/로그인성공_200/" : {
                    "value" : "{\r\n  \"accessToken\" : \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODAwLCJleHAiOjE3MDcwOTk2MDB9.uOQtYbJzPMswtMD4qv8zT5SldEKfdgZ-vF5jePOHaJM\",\r\n  \"tokenType\" : \"Bearer\",\r\n  \"authType\" : \"DANCY\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "로그아웃",
        "description" : "로그아웃을 진행하는 API 입니다.<br>로그아웃에 성공한다면, 200 OK 와 함께 Refresh Token 을 가지고 있는 Cookie 가 삭제됩니다.<br>프론트앤드 영역에서 Access Token 을 직접 삭제시켜 주어야 합니다.<br>AUTH-TOKEN 을 입력하지 않았을 때, 401 Unauthorized 가 반환됩니다.",
        "operationId" : "auth_api_test/로그아웃_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk4LCJleHAiOjE3MDcwOTk1OTh9.YVauyU-VunaWk089yDGBy1qmpFcMVgsiWyDnqQ9pkWo"
        } ],
        "responses" : {
          "200" : {
            "description" : "200"
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "auth_api_test/로그아웃_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/check" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "비밀번호 찾기 인증번호 검증",
        "description" : "비밀번호 찾기에서의 이메일 인증번호 검증 API 입니다..<br>지정된 코드와 일치하는 코드를 입력하는 경우, 200 OK 와 함께 AUTH-TOKEN 을 반환합니다.<br>로그인 처리되는 것은 아니지만, 해당 JWT 코드를 저장해 이후 비밀번호 찾기를 진행할 수 있습니다.<br>서버 내에서는, “비밀번호 찾기 기능이 인가되었다” 라는 정보가 저장됩니다. <br>해당 정보는 1시간 동안 유효하며, 1시간 이내로 비밀번호 찾기 기능에서의 변경을 수행하지 않으면 해당 프로세스를 재실행해야 합니다.<br>이메일에 동봉된 인증코드와 입력한 인증코드가 일치하지 않을 경우, <br>403 Forbidden 과 함께 인증 코드가 일치하지 않는다는 메세지가 반환됩니다.<br>저장된 인증코드가 존재하지 않을 경우, 404 Not Found 가 반환됩니다.<br>인증번호 입력을 5번 틀린 사용자가, 해당 시스템을 이용하려고 할 때 406 Not Acceptable 과 함께 아래 메세지를 입력받습니다.<br>소셜 로그인 계정일 경우, 409 Conflict 가 반환됩니다.<br>현재, 404, 406, 409 Code 가 나가는 케이스의 경우, 테스트하기 어려운 케이스이기 때문에<br>노션에 직접 해당 테스트 검증 결과를 추후 남겨 두겠습니다.",
        "operationId" : "auth_api_test/비밀번호_찾기_인증번호_",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-check1025472966"
              },
              "examples" : {
                "auth_api_test/비밀번호_찾기_인증번호_검증_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"123456\"\r\n}"
                },
                "auth_api_test/비밀번호_찾기_인증번호_불일치_403/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"654321\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-password-check328342784"
                },
                "examples" : {
                  "auth_api_test/비밀번호_찾기_인증번호_검증_성공_200/" : {
                    "value" : "{\r\n  \"accessToken\" : \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk5LCJleHAiOjE3MDcwOTk1OTl9.VhEgE1hGxNVGxWtEL2x2zvMo-J4q8asA3iiqPoH_E1M\",\r\n  \"tokenType\" : \"Bearer\",\r\n  \"authType\" : \"DANCY\"\r\n}"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/비밀번호_찾기_인증번호_불일치_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"인증 코드가 일치하지 않습니다. 2 번 틀렸습니다\",\r\n  \"errorType\" : \"VerifyCodeNotMatchException\",\r\n  \"fieldName\" : \"verifyCode\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/find" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "비밀번호 찾기에서의 비밀번호 변경",
        "description" : "비밀번호 찾기에서의 최종 비밀번호 변경을 진행하는 API 입니다.<br>비밀번호 찾기에서의 이메일 프로세스를 모두 통과하고, 받아온 토큰과 함께 비밀번호를 최종 변경할 경우,<br>200 OK 와 함께 최종적으로 비밀번호가 변경되게 됩니다.<br>최종적으로 다시 로그인되는 것은 아니며, 이전에 받았던 Token 을 삭제하는 작업이 클라이언트 단에서 필요합니다.<br>이전의 프로세스 진행 후 1시간 동안 비밀번호를 바꾸지 않았다면, 다시 해당 프로세스 전체를 진행해야 합니다.<br>비밀번호는 8자리 이상, 영문, 숫자, 특수문자 조합이어야 하며, 이를 위반하는 경우 400 Bad Request 가 반환됩니다.<br>AUTH-TOKEN 이 유효하지 않거나 값이 없을 경우, 401 Unauthorized 가 반환됩니다.<br>비밀번호 찾기 인증 시스템에서 정상적으로 해당 기능에 대한 허가를 받지 않은 사용자가 해당 API 를 이용할 경우, 403 Forbidden 이 반환됩니다.<br>소셜 로그인 계정일 경우, 409 Conflict 가 반환됩니다.<br>현재, 403, 409 Code 가 나가는 케이스의 경우, 테스트하기 어려운 케이스이기 때문에<br>테스트를 수동으로 진행했으며, 409 의 경우 소셜 로그인을 구현 후 진행합니다.",
        "operationId" : "auth_api_test/비밀번호_찾기_비밀번호_변경_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODAwLCJleHAiOjE3MDcwOTk2MDB9.uOQtYbJzPMswtMD4qv8zT5SldEKfdgZ-vF5jePOHaJM"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-password-find-1938778681"
              },
              "examples" : {
                "auth_api_test/비밀번호_찾기_비밀번호_변경_성공_200/" : {
                  "value" : "{\r\n  \"newPassword\" : \"Asdf1234!!\"\r\n}"
                },
                "auth_api_test/비밀번호_찾기_비밀번호_변경_토큰없음_401/" : {
                  "value" : "{\r\n  \"newPassword\" : \"Asdf1234!!\"\r\n}"
                },
                "auth_api_test/비밀번호_찾기_비밀번호_변경_패스워드타입아님_400/" : {
                  "value" : "{\r\n  \"newPassword\" : \"asdfasdf\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200"
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "auth_api_test/비밀번호_찾기_비밀번호_변경_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "auth_api_test/비밀번호_찾기_비밀번호_변경_패스워드타입아님_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"비밀번호는 8자리 이상, 영문, 숫자, 특수문자 조합이어야 합니다.\",\r\n  \"errorType\" : \"Password\",\r\n  \"fieldName\" : \"newPassword\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/password/send" : {
      "post" : {
        "tags" : [ "email" ],
        "summary" : "비밀번호 찾기 이메일 전송",
        "description" : "계정 이메일에 비밀번호 찾기를 전송하는 API 입니다.<br>정상적으로 비밀번호 찾기 이메일이 전송되었을 때, 200 OK 가 반환됩니다.<br>전송하려는 이메일 계정이 이메일 형식을 띠고 있지 않는다면, 400 Bad Request 가 반환됩니다.<br>가입된 이메일이 아닐 경우, 404 Not Found 가 반환됩니다.<br>인증번호 입력을 5번 틀린 사용자가, 해당 시스템을 이용하려고 할 때 406 Not Acceptable 이 반환됩니다.<br>자체 로그인 계정이 아닌 경우, 409 Conflict 가 반환됩니다.<br> 406 Code 의 경우, 테스트 코드를 만들지는 못했지만 수동 테스트를 진행 성공했습니다.",
        "operationId" : "email_api_test/비밀번호_찾기_",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-send1357172838"
              },
              "examples" : {
                "email_api_test/비밀번호_찾기_가입된이메일_아님_404/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\"\r\n}"
                },
                "email_api_test/비밀번호_찾기_이메일_전송_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\"\r\n}"
                },
                "email_api_test/비밀번호_찾기_이메일_전송_이메일형식_400/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"asdf\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/비밀번호_찾기_가입된이메일_아님_404/" : {
                    "value" : "[ {\r\n  \"message\" : \"가입된 이메일이 아닙니다.\",\r\n  \"errorType\" : \"UserNotFoundException\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200"
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/비밀번호_찾기_이메일_전송_이메일형식_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식이 아닙니다.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"targetEmail\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/verify/check" : {
      "post" : {
        "tags" : [ "email" ],
        "summary" : "이메일 가입 인증번호 검증",
        "description" : "이메일 가입 인증번호 코드를 검증하는 API 입니다.<br>서버에 저장된 인증 코드와 입력한 인증 코드가 일치할 때, 200 OK 가 반환됩니다.<br>이후, 회원가입을 진행할 수 있으며, 30분 이내에 가입하지 않을 시 이메일 인증을 다시 진행해야 합니다. <br>가입하려는 이메일 계정이, 이메일 형식을 하고 있지 않을 경우 400 Bad Request 가 반환됩니다.<br>이메일 인증번호가 일치하지 않을 경우, 403 Forbidden 이 반환됩니다.<br>가입하려는 이메일 계정에 인증코드가 전송되어 있지 않거나, 시간이 30분 이상 지나 만료된 코드의 경우<br>404 Not Found 가 반환됩니다.<br>이미 가입된 이메일로 검증을 시도할 경우, 409 Conflict 가 반환됩니다.<br>404 코드의 경우, 수동 테스트를 진행했고 성공했습니다.",
        "operationId" : "email_api_test/이메일_인증",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-check1025472966"
              },
              "examples" : {
                "email_api_test/이메일_인증_이메일형식아님_400/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200\",\r\n  \"verifyCode\" : \"123456\"\r\n}"
                },
                "email_api_test/이메일_인증_이미가입_409/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"123456\"\r\n}"
                },
                "email_api_test/이메일_인증_코드불일치_403/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"654321\"\r\n}"
                },
                "email_api_test/이메일_인증번호_확인_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"123456\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_인증_이메일형식아님_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식이 아닙니다.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"targetEmail\"\r\n} ]"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_인증_이미가입_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"이미 가입된 이메일 계정입니다.\",\r\n  \"errorType\" : \"UserAlreadyExistException\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_인증_코드불일치_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"인증번호가 일치하지 않습니다.\",\r\n  \"errorType\" : \"VerifyCodeNotMatchException\",\r\n  \"fieldName\" : \"verifyCode\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/email-verify-check-123477478"
                },
                "examples" : {
                  "email_api_test/이메일_인증번호_확인_성공_200/" : {
                    "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verified\" : true\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/verify/send" : {
      "post" : {
        "tags" : [ "email" ],
        "summary" : "이메일 가입 인증번호 전송",
        "description" : "이메일 가입 인증번호 코드를 전송하는 API 입니다.<br>이미 생성된 계정이 아닐 때, 200 OK 와 함께 이메일이 해당 계정으로 전송됩니다.<br>이메일이 전송될 때, 서버에 인증번호 정보가 저장되어 있습니다. 인증번호의 유효기간은 30분 입니다. <br>가입하려는 이메일 계정이, 이메일 형식을 하고 있지 않을 경우 400 Bad Request 가 반환됩니다.<br>이미 가입된 이메일의 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "email_api_test/이메일_가입_인증번호_",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-send1357172838"
              },
              "examples" : {
                "email_api_test/이메일_가입_인증번호_이미가입_409/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\"\r\n}"
                },
                "email_api_test/이메일_가입_인증번호_전송_이메일_형식_아님_400/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"asdf\"\r\n}"
                },
                "email_api_test/이메일_가입_인증번호_전송_이메일아님_400/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"asdf\"\r\n}"
                },
                "email_api_test/이메일_가입_인증번호_전송_테스트_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_가입_인증번호_이미가입_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"이미 가입된 이메일 계정입니다.\",\r\n  \"errorType\" : \"UserAlreadyExistException\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_가입_인증번호_전송_이메일_형식_아님_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식이 아닙니다.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"targetEmail\"\r\n} ]"
                  },
                  "email_api_test/이메일_가입_인증번호_전송_이메일아님_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식이 아닙니다.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"targetEmail\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200"
          }
        }
      }
    },
    "/stage" : {
      "post" : {
        "tags" : [ "stage" ],
        "summary" : "게시물작성",
        "description" : "<br>게시물을 작성하는 API입니다.<br>성공적으로 작성되면 200 OK와 함께 게시글 ID, 제목, 내용, 썸네일 등이 반환됩니다.<br>게시물 제목을 40자 이하로 작성하지 않거나, 공백으로 둘 경우, 그리고 게시물 내용이 공백일 경우<br>400 Bad Request 가 생성됩니다.<br>헤더에 로그인 토큰을 입력하지 않을 경우, 401 Unauthorized 가 반환됩니다.",
        "operationId" : "article_api_test/게시물_작성_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3NzkyLCJleHAiOjE3MDcwOTk1OTJ9.WuE4mIM1VOF-ynVyX6f1fWL5lWIfZNOApNrJwOxzKiQ"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/stage-1635408559"
              },
              "examples" : {
                "article_api_test/게시물_작성_검증위반_400/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"\",\r\n  \"articleContent\" : \"test_content\",\r\n  \"video\" : \"test_video\",\r\n  \"thumbnailImageUrl\" : \"test_image\"\r\n}"
                },
                "article_api_test/게시물_작성_성공_200/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"test_title\",\r\n  \"articleContent\" : \"test_content\",\r\n  \"video\" : \"test_video\",\r\n  \"thumbnailImageUrl\" : \"test_image\"\r\n}"
                },
                "article_api_test/게시물_작성_토큰없음_401/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"\",\r\n  \"articleContent\" : \"test_content\",\r\n  \"video\" : \"test_video\",\r\n  \"thumbnailImageUrl\" : \"test_image\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "article_api_test/게시물_작성_검증위반_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"게시물 제목을 입력해 주세요\",\r\n  \"errorType\" : \"NotEmpty\",\r\n  \"fieldName\" : \"articleTitle\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage991339425"
                },
                "examples" : {
                  "article_api_test/게시물_작성_성공_200/" : {
                    "value" : "{\r\n  \"articleId\" : 1,\r\n  \"articleTitle\" : \"test_title\",\r\n  \"articleContent\" : \"test_content\",\r\n  \"thumbnailImageUrl\" : \"test_image\",\r\n  \"thumbnailVideoUrl\" : \"test_video\",\r\n  \"view\" : 0,\r\n  \"articleLike\" : 0,\r\n  \"createdDate\" : \"2024-02-05T10:49:55.7422106\",\r\n  \"isArticleLiked\" : false,\r\n  \"isAuthorFollowing\" : false,\r\n  \"score\" : 0,\r\n  \"follower\" : 0,\r\n  \"userId\" : 1,\r\n  \"nickname\" : \"dongw\",\r\n  \"profileImageUrl\" : null,\r\n  \"video\" : null\r\n}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_작성_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stage/{articleId}" : {
      "put" : {
        "tags" : [ "stage" ],
        "summary" : "게시물 수정",
        "description" : "<br>게시물을 수정하는 API입니다.<br>성공적으로 수정되면 200 OK와 함께 수정 후 게시글 ID, 제목, 내용, 썸네일 등이 반환됩니다.<br>게시물 제목을 40자 이하로 작성하지 않거나, 공백으로 둘 경우, 그리고 게시물 내용이 공백일 경우<br>400 Bad Request 가 생성됩니다.<br>로그인 토큰을 입력하지 않으면, 401 Unauthorized 가 반환됩니다.<br>로그인되어 있는 사람이 작성하지 않은 게시물을 수정하고자 하는 경우, 403 Forbidden 이 반환됩니다.<br>해당 글을 찾을 수 없을 경우, 404 Not Found 가 반환됩니다.",
        "operationId" : "article_api_test/게시물_수정",
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk3LCJleHAiOjE3MDcwOTk1OTd9.AKTN2Wm5xIp_5gAfg6lszVqaXC1qkG-Txwa8bwmW55Y"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/stage-1635408559"
              },
              "examples" : {
                "article_api_test/게시물_수정/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"test_title_modified\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"video\" : null,\r\n  \"thumbnailImageUrl\" : null\r\n}"
                },
                "article_api_test/게시물_수정_검증위반_400/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"video\" : null,\r\n  \"thumbnailImageUrl\" : null\r\n}"
                },
                "article_api_test/게시물_수정_게시물없음_404/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"test_title_modified\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"video\" : null,\r\n  \"thumbnailImageUrl\" : null\r\n}"
                },
                "article_api_test/게시물_수정_권한없음_403/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"test_title_modified\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"video\" : null,\r\n  \"thumbnailImageUrl\" : null\r\n}"
                },
                "article_api_test/게시물_수정_토큰없음_401/" : {
                  "value" : "{\r\n  \"articleTitle\" : \"test_title_modified\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"video\" : null,\r\n  \"thumbnailImageUrl\" : null\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage991339425"
                },
                "examples" : {
                  "article_api_test/게시물_수정/" : {
                    "value" : "{\r\n  \"articleId\" : 1,\r\n  \"articleTitle\" : \"test_title_modified\",\r\n  \"articleContent\" : \"test_content_modified\",\r\n  \"thumbnailImageUrl\" : \"test_image\",\r\n  \"thumbnailVideoUrl\" : \"test_video\",\r\n  \"view\" : 0,\r\n  \"articleLike\" : 0,\r\n  \"createdDate\" : \"2024-02-05T10:49:57.928995\",\r\n  \"isArticleLiked\" : false,\r\n  \"isAuthorFollowing\" : false,\r\n  \"score\" : 0,\r\n  \"follower\" : 0,\r\n  \"userId\" : 1,\r\n  \"nickname\" : \"dongw\",\r\n  \"profileImageUrl\" : null,\r\n  \"video\" : null\r\n}"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "article_api_test/게시물_수정_검증위반_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"비어 있을 수 없습니다\",\r\n  \"errorType\" : \"NotEmpty\",\r\n  \"fieldName\" : \"articleTitle\"\r\n} ]"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "article_api_test/게시물_수정_게시물없음_404/" : {
                    "value" : "[ {\r\n  \"message\" : \"게시물을 찾을 수 없습니다.\",\r\n  \"errorType\" : \"ArticleNotFoundException\",\r\n  \"fieldName\" : \"article\"\r\n} ]"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "article_api_test/게시물_수정_권한없음_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"게시물을 수정/삭제할 수 있는 권한이 없습니다.\",\r\n  \"errorType\" : \"ArticleNotOwnerException\",\r\n  \"fieldName\" : \"article\"\r\n} ]"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_수정_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "stage" ],
        "summary" : "게시물 삭제",
        "description" : "<br>게시물을 삭제하는 API입니다.<br>성공적으로 삭제되면 200 OK와 함께 삭제된 게시글 ID가 반환됩니다.<br>로그인 토큰을 입력하지 않는다면 401 Unauthorized 가 반환됩니다.<br>로그인한 유저가 그 글을 삭제할 권한을 가지고 있지 않다면, 403 Forbidden 이 반환됩니다.<br>삭제하고자 하는 글을 찾을 수 없다면, 404 Not Found 가 반환됩니다.",
        "operationId" : "article_api_test/게시물_삭제",
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "게시물 아이디",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3Nzk3LCJleHAiOjE3MDcwOTk1OTd9.AKTN2Wm5xIp_5gAfg6lszVqaXC1qkG-Txwa8bwmW55Y"
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_삭제/" : {
                    "value" : "1"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "404",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_삭제_게시물없음_404/" : {
                    "value" : "[ {\r\n  \"message\" : \"게시물을 찾을 수 없습니다.\",\r\n  \"errorType\" : \"ArticleNotFoundException\",\r\n  \"fieldName\" : \"article\"\r\n} ]"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "403",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_삭제_권한없음_403/" : {
                    "value" : "[ {\r\n  \"message\" : \"게시물을 수정/삭제할 수 있는 권한이 없습니다.\",\r\n  \"errorType\" : \"ArticleNotOwnerException\",\r\n  \"fieldName\" : \"article\"\r\n} ]"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "article_api_test/게시물_삭제_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/details" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "자기정보상세조회",
        "description" : "자신의 상세 정보를 가져오는 API 입니다.<br>토큰을 입력하면, 200 OK 와 함께 해당 유저의 상세정보가 반환됩니다.<br>토큰을 헤더에 입력하지 않았을 경우, 401 Unauthorized 가 반환됩니다. ",
        "operationId" : "user_api_test/자기상세정보조회_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODA3LCJleHAiOjE3MDcwOTk2MDd9.WB6JJvNEEMOw19eQdF0I0HdTgXKXfFhIHR0e5KDPXGs"
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-details-1087654261"
                },
                "examples" : {
                  "user_api_test/자기상세정보조회_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"nickname\" : \"dongw\",\r\n  \"birthDate\" : \"2000-01-01\",\r\n  \"introduceText\" : \"\",\r\n  \"profileImageUrl\" : null\r\n}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "user_api_test/자기상세정보조회_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/introduce" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "소개메세지변경",
        "description" : "소개 메세지를 변경하는 API 입니다..<br>성공적으로 소개 메세지가 변경되었을 때, 200 OK 와 함께 계정 이메일과 소개 메세지 정보가 반환됩니다.<br>토큰을 헤더에 입력하지 않았을 경우, 401 Unauthorized 가 반환됩니다. <br>50자 이상 소개이거나, 공백 소개메세지가 입력되면 400 Bad Request 가 반환됩니다.",
        "operationId" : "user_api_test/소개",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODA4LCJleHAiOjE3MDcwOTk2MDh9.XBlG3KdsXrxfyBR66lHyTFMwCKAGSqJirZ5kOuAqp0E"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user-introduce1696629381"
              },
              "examples" : {
                "user_api_test/소개매세지_50자이상_400/" : {
                  "value" : "{\r\n  \"introduceText\" : \"Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!Hello!\"\r\n}"
                },
                "user_api_test/소개매세지_토큰없음_401/" : {
                  "value" : "{\r\n  \"introduceText\" : \"Hello!\"\r\n}"
                },
                "user_api_test/소개메세지_변경_성공_200/" : {
                  "value" : "{\r\n  \"introduceText\" : \"Hello!\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/소개매세지_50자이상_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"소개 메세지는 1자 이상 50자 이하여야 합니다.\",\r\n  \"errorType\" : \"Size\",\r\n  \"fieldName\" : \"introduceText\"\r\n} ]"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "user_api_test/소개매세지_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-introduce-199180118"
                },
                "examples" : {
                  "user_api_test/소개메세지_변경_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"introduceText\" : \"Hello!\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/nickname" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "닉네임변경",
        "description" : "닉네임 변경을 처리하는 API 입니다..<br>성공적으로 닉네임이 변경되었을 때, 200 OK 와 함께 계정 이메일과 닉네임 정보가 반환됩니다.<br>토큰을 헤더에 입력하지 않았을 경우, 401 Unauthorized 가 반환됩니다. <br>중복되는 닉네임이 존재했을 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "user_api_test/닉네임_변경_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODA4LCJleHAiOjE3MDcwOTk2MDh9.XBlG3KdsXrxfyBR66lHyTFMwCKAGSqJirZ5kOuAqp0E"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user-nickname-520340433"
              },
              "examples" : {
                "user_api_test/닉네임_변경_닉네임중복_409/" : {
                  "value" : "{\r\n  \"nickname\" : \"dongw\"\r\n}"
                },
                "user_api_test/닉네임_변경_성공_200/" : {
                  "value" : "{\r\n  \"nickname\" : \"asdf\"\r\n}"
                },
                "user_api_test/닉네임_변경_토큰없음_401/" : {
                  "value" : "{\r\n  \"nickname\" : \"asdf\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_닉네임중복_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"중복되는 닉네임입니다.\",\r\n  \"errorType\" : \"DuplicateNicknameException\",\r\n  \"fieldName\" : \"nickname\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname2062416360"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"nickname\" : \"asdf\"\r\n}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/profile_image" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "유저프로필사진수정",
        "description" : "유저 프로필 사진을 수정하는 API 입니다.<br>성공적으로 프로필 사진이 수정된 경우, 200 OK 와 함께 이메일과 프로필 이미지 URL 이 반환됩니다.<br>프로필 이미지가 지정된 사진 확장자명으로 되어 있는 파일이 아닐 경우, 400 Bad Request 가 반환되며 <br>아래와 같은 메세지를 반환받습니다. <br>AUTH-TOKEN 이 유효하지 않거나, 값이 없을 경우 401 Unauthorized 가 반환됩니다.",
        "operationId" : "user_api_test/유저프로필사진_수정_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA3MDk3ODA4LCJleHAiOjE3MDcwOTk2MDh9.XBlG3KdsXrxfyBR66lHyTFMwCKAGSqJirZ5kOuAqp0E"
        } ],
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/유저프로필사진_수정_다른확장자파일_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"입력된 파일이 이미지가 아닙니다.\",\r\n  \"errorType\" : \"ImageFile\",\r\n  \"fieldName\" : \"profileImage\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-profile_image1544711743"
                },
                "examples" : {
                  "user_api_test/유저프로필사진_수정_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"profileImageUrl\" : \"https://gumid210bucket.s3.ap-northeast-2.amazonaws.com/profileImage/b30cdf2e-397d-4f4a-8a2d-c11d3b065b12.png\"\r\n}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/stage-articleId486549215"
                },
                "examples" : {
                  "user_api_test/유저프로필사진_수정_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/signup" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "회원가입",
        "description" : "회원 가입을 처리하는 API 입니다.<br>성공적으로 회원가입이 이루어진 경우, 200 OK 와 함께 이메일과 닉네임 정보가 반환됩니다.<br>검증 로직에 맞지 않는 입력값을 넣었을 때, 400 Bad Request 가 반환됩니다. <br>이메일 검증이 이루어지지 않은 사용자가 가입을 시도할 경우, 403 Forbidden 이 반환됩니다.<br>이때, 이메일 인증 이후 30분 이상 가입이 진행되지 않았을 경우, 인증이 취소된 것으로 간주되며<br>새로 인증을 진행해야 합니다.<br>이미 가입된 이메일의 경우, 409 Conflict 가 반환됩니다.<br>닉네임 중복의 경우, 409 Conflict 가 반환됩니다.<br>403 코드의 경우, 수동 테스트를 진행했고, 성공을 확인할 수 있었습니다.",
        "operationId" : "user_api_test/회원가입_",
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/회원가입_검증로직_미충족_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식으로 입력해 주세요.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname2062416360"
                },
                "examples" : {
                  "user_api_test/회원가입_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"nickname\" : \"dongw\"\r\n}"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/회원가입_이미_가입된_이메일_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"이미 가입된 이메일입니다.\",\r\n  \"errorType\" : \"UserAlreadyExistException\",\r\n  \"fieldName\" : \"email\"\r\n} ]"
                  },
                  "user_api_test/회원가입_이미_존재하는_닉네임_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"이미 존재하는 닉네임입니다.\",\r\n  \"errorType\" : \"DuplicateNicknameException\",\r\n  \"fieldName\" : \"nickname\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/exists/{nickname}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "닉네임 중복체크",
        "description" : "닉네임 중복검사를 수행하는 API 입니다.<br>닉네임이 기존 가입된 닉네임과 중복되지 않았을 경우, 200 OK 만 반환됩니다.<br>이미 가입되어 중복되는 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "user_api_test/닉네임_중복체크_",
        "parameters" : [ {
          "name" : "nickname",
          "in" : "path",
          "description" : "닉네임",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200"
          },
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/닉네임_중복체크_중복_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"중복되는 닉네임입니다.\",\r\n  \"errorType\" : \"DuplicateNicknameException\",\r\n  \"fieldName\" : \"nickname\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "user-details-1087654261" : {
        "type" : "object",
        "properties" : {
          "introduceText" : {
            "type" : "string",
            "description" : "소개메세지"
          },
          "nickname" : {
            "type" : "string",
            "description" : "닉네임"
          },
          "profileImageUrl" : {
            "type" : "object",
            "description" : "프로필이미지URL"
          },
          "birthDate" : {
            "type" : "string",
            "description" : "생년월일"
          },
          "email" : {
            "type" : "string",
            "description" : "이메일"
          }
        }
      },
      "email-verify-send1357172838" : {
        "required" : [ "targetEmail" ],
        "type" : "object",
        "properties" : {
          "targetEmail" : {
            "type" : "string",
            "description" : "인증번호를 보내려는 이메일"
          }
        }
      },
      "auth-1994102425" : {
        "required" : [ "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "현재 비밀번호"
          }
        }
      },
      "user-nickname2062416360" : {
        "type" : "object",
        "properties" : {
          "nickname" : {
            "type" : "string",
            "description" : "닉네임"
          },
          "email" : {
            "type" : "string",
            "description" : "이메일"
          }
        }
      },
      "user-introduce1696629381" : {
        "required" : [ "introduceText" ],
        "type" : "object",
        "properties" : {
          "introduceText" : {
            "type" : "string",
            "description" : "바꾸고자 하는 소개 메세지"
          }
        }
      },
      "user-nickname-1708490688" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "fieldName" : {
              "type" : "string",
              "description" : "에러난 필드이름"
            },
            "errorType" : {
              "type" : "string",
              "description" : "에러타입"
            },
            "message" : {
              "type" : "string",
              "description" : "에러메세지"
            }
          }
        }
      },
      "user-introduce-199180118" : {
        "type" : "object",
        "properties" : {
          "introduceText" : {
            "type" : "string",
            "description" : "닉네임"
          },
          "email" : {
            "type" : "string",
            "description" : "이메일"
          }
        }
      },
      "user-profile_image1544711743" : {
        "type" : "object",
        "properties" : {
          "profileImageUrl" : {
            "type" : "string",
            "description" : "프로필이미지URL"
          },
          "email" : {
            "type" : "string",
            "description" : "이메일"
          }
        }
      },
      "auth-password-check328342784" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "인증 타입"
          },
          "tokenType" : {
            "type" : "string",
            "description" : "토큰 타입"
          },
          "accessToken" : {
            "type" : "string",
            "description" : "access token"
          }
        }
      },
      "user-nickname-520340433" : {
        "required" : [ "nickname" ],
        "type" : "object",
        "properties" : {
          "nickname" : {
            "type" : "string",
            "description" : "변경하고자 하는 닉네임"
          }
        }
      },
      "stage-1635408559" : {
        "required" : [ "articleContent", "articleTitle", "thumbnailImageUrl", "video" ],
        "type" : "object",
        "properties" : {
          "thumbnailImageUrl" : {
            "type" : "object",
            "description" : "썸네일 이미지 URL"
          },
          "articleTitle" : {
            "type" : "string",
            "description" : "게시물 제목"
          },
          "articleContent" : {
            "type" : "string",
            "description" : "게시물 내용"
          },
          "video" : {
            "type" : "object",
            "description" : "비디오"
          }
        }
      },
      "auth-login-83566640" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "비밀번호"
          },
          "email" : {
            "type" : "string",
            "description" : "아이디"
          }
        }
      },
      "auth-password-find-1938778681" : {
        "required" : [ "newPassword" ],
        "type" : "object",
        "properties" : {
          "newPassword" : {
            "type" : "string",
            "description" : "새 비밀번호"
          }
        }
      },
      "stage991339425" : {
        "type" : "object",
        "properties" : {
          "articleTitle" : {
            "type" : "string",
            "description" : "게시물 제목"
          },
          "follower" : {
            "type" : "number",
            "description" : "팔로워 수"
          },
          "articleId" : {
            "type" : "number",
            "description" : "게시물 ID"
          },
          "video" : {
            "type" : "object",
            "description" : "비디오"
          },
          "articleLike" : {
            "type" : "number",
            "description" : "게시물 좋아요"
          },
          "userId" : {
            "type" : "number",
            "description" : "유저 PK 아이디"
          },
          "isArticleLiked" : {
            "type" : "boolean",
            "description" : "내가 좋아요했는지 여부"
          },
          "thumbnailVideoUrl" : {
            "type" : "string",
            "description" : "썸네일 비디오 URL"
          },
          "score" : {
            "type" : "number",
            "description" : "점수"
          },
          "view" : {
            "type" : "number",
            "description" : "게시물 조회수"
          },
          "thumbnailImageUrl" : {
            "type" : "string",
            "description" : "썸네일 이미지 URL"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "생성일시"
          },
          "nickname" : {
            "type" : "string",
            "description" : "유저 닉네임"
          },
          "articleContent" : {
            "type" : "string",
            "description" : "게시물 내용"
          },
          "isAuthorFollowing" : {
            "type" : "boolean",
            "description" : "해당 사람 팔로우 여부"
          },
          "profileImageUrl" : {
            "type" : "object",
            "description" : "프로필 이미지 URL"
          }
        }
      },
      "email-verify-check1025472966" : {
        "required" : [ "targetEmail", "verifyCode" ],
        "type" : "object",
        "properties" : {
          "verifyCode" : {
            "type" : "string",
            "description" : "들어온 인증번호"
          },
          "targetEmail" : {
            "type" : "string",
            "description" : "인증번호를 보낸 이메일"
          }
        }
      },
      "email-verify-check-123477478" : {
        "type" : "object",
        "properties" : {
          "targetEmail" : {
            "type" : "string",
            "description" : "인증 번호를 보낸 이메일"
          },
          "verified" : {
            "type" : "boolean",
            "description" : "인증 확인"
          }
        }
      },
      "auth-change1195549048" : {
        "required" : [ "currentPassword", "newPassword" ],
        "type" : "object",
        "properties" : {
          "newPassword" : {
            "type" : "string",
            "description" : "바꾸고자 하는 패스워드"
          },
          "currentPassword" : {
            "type" : "string",
            "description" : "현재 패스워드"
          }
        }
      },
      "stage-articleId486549215" : {
        "type" : "object"
      }
    }
  }
}