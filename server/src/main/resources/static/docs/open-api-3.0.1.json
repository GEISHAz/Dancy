{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SSAFY DANCY API",
    "description" : "SSAFY 공통프로젝트 DANCY 에서 사용할 API 문서입니다.",
    "version" : "0.0.1"
  },
  "servers" : [ {
    "url" : "http://localhost:8080"
  } ],
  "tags" : [ ],
  "paths" : {
    "/auth/login" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "로그인",
        "description" : "로그인을 진행하는 API 입니다.<br>로그인에 성공한다면, 200 OK 와 함께 Access Token 과 Refresh Token, 인증타입, 토큰타입 정보가 반환됩니다.<br>아이디나 비밀번호가 일치하지 않는다면, 404 Not Found 가 반환됩니다.",
        "operationId" : "auth_api_test/로그인성공_200/",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/auth-login-83566640"
              },
              "examples" : {
                "auth_api_test/로그인성공_200/" : {
                  "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"password\" : \"Test1122!\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/auth-login328342784"
                },
                "examples" : {
                  "auth_api_test/로그인성공_200/" : {
                    "value" : "{\r\n  \"accessToken\" : \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA2Nzc3NTk5LCJleHAiOjE3MDY3NzkzOTl9.FztpYW-ga6_C6vyNe9KcIcAxosOOWpKd4jHAfJjWpxk\",\r\n  \"tokenType\" : \"Bearer\",\r\n  \"authType\" : \"DANCY\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "로그아웃",
        "description" : "로그아웃을 진행하는 API 입니다.<br>로그아웃에 성공한다면, 200 OK 와 함께 Refresh Token 을 가지고 있는 Cookie 가 삭제됩니다.<br>프론트앤드 영역에서 Access Token 을 직접 삭제시켜 주어야 합니다.<br>AUTH-TOKEN 을 입력하지 않았을 때, 401 Unauthorized 가 반환됩니다.",
        "operationId" : "auth_api_test/로그아웃_refresh_token_cookie_제거_200/",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA2Nzc3NTk4LCJleHAiOjE3MDY3NzkzOTh9.l04t21qGg8ueC2UdgJ4s3zNIE9AeIKpMWlXewWvZPSU"
        } ],
        "responses" : {
          "200" : {
            "description" : "200"
          }
        }
      }
    },
    "/email/verify/check" : {
      "post" : {
        "tags" : [ "email" ],
        "summary" : "이메일 가입 인증번호 검증",
        "description" : "이메일 가입 인증번호 코드를 검증하는 API 입니다.<br>서버에 저장된 인증 코드와 입력한 인증 코드가 일치할 때, 200 OK 가 반환됩니다.<br>이후, 회원가입을 진행할 수 있으며, 30분 이내에 가입하지 않을 시 이메일 인증을 다시 진행해야 합니다. <br>가입하려는 이메일 계정이, 이메일 형식을 하고 있지 않을 경우 400 Bad Request 가 반환됩니다.<br>이메일 인증번호가 일치하지 않을 경우, 403 Forbidden 이 반환됩니다.<br>가입하려는 이메일 계정에 인증코드가 전송되어 있지 않거나, 시간이 30분 이상 지나 만료된 코드의 경우<br>404 Not Found 가 반환됩니다.<br>이미 가입된 이메일로 검증을 시도할 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "email_api_test/이메일_인증번호_확인_성공_200/",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-check1025472966"
              },
              "examples" : {
                "email_api_test/이메일_인증번호_확인_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verifyCode\" : \"123456\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/email-verify-check-123477478"
                },
                "examples" : {
                  "email_api_test/이메일_인증번호_확인_성공_200/" : {
                    "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\",\r\n  \"verified\" : true\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/verify/send" : {
      "post" : {
        "tags" : [ "email" ],
        "summary" : "이메일 가입 인증번호 전송",
        "description" : "이메일 가입 인증번호 코드를 전송하는 API 입니다.<br>이미 생성된 계정이 아닐 때, 200 OK 와 함께 이메일이 해당 계정으로 전송됩니다.<br>이메일이 전송될 때, 서버에 인증번호 정보가 저장되어 있습니다. 인증번호의 유효기간은 30분 입니다. <br>가입하려는 이메일 계정이, 이메일 형식을 하고 있지 않을 경우 400 Bad Request 가 반환됩니다.<br>이미 가입된 이메일의 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "email_api_test/이메일_가입_인증번호_전송_",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/email-verify-send1357172838"
              },
              "examples" : {
                "email_api_test/이메일_가입_인증번호_전송_이메일_형식_아님_400/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"asdf\"\r\n}"
                },
                "email_api_test/이메일_가입_인증번호_전송_테스트_성공_200/" : {
                  "value" : "{\r\n  \"targetEmail\" : \"ndw8200@naver.com\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "400",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "email_api_test/이메일_가입_인증번호_전송_이메일_형식_아님_400/" : {
                    "value" : "[ {\r\n  \"message\" : \"이메일 형식이 아닙니다.\",\r\n  \"errorType\" : \"Email\",\r\n  \"fieldName\" : \"targetEmail\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200"
          }
        }
      }
    },
    "/start/hello" : {
      "get" : {
        "tags" : [ "start" ],
        "summary" : "시작 API",
        "description" : "시작 테스트 입니다.",
        "operationId" : "start_api_test/start_테스트/",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "text/plain;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/start-hello486549215"
                },
                "examples" : {
                  "start_api_test/start_테스트/" : {
                    "value" : "Hello Dancy!GumiD210!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/nickname" : {
      "put" : {
        "tags" : [ "user" ],
        "summary" : "닉네임변경",
        "description" : "닉네임 변경을 처리하는 API 입니다..<br>성공적으로 닉네임이 변경되었을 때, 200 OK 와 함께 계정 이메일과 닉네임 정보가 반환됩니다.<br>토큰을 헤더에 입력하지 않았을 경우, 401 Unauthorized 가 반환됩니다. <br>중복되는 닉네임이 존재했을 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "user_api_test/닉네임_변경_",
        "parameters" : [ {
          "name" : "AUTH-TOKEN",
          "in" : "header",
          "description" : "access token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZHc4MjAwQG5hdmVyLmNvbSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzA2Nzc3NjAzLCJleHAiOjE3MDY3Nzk0MDN9.Iwfh9sN2Zv0lAu_3yhgXsqKnlo2V2JlHaN6BUUJjsAY"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user-nickname-520340433"
              },
              "examples" : {
                "user_api_test/닉네임_변경_닉네임중복_409/" : {
                  "value" : "{\r\n  \"nickname\" : \"dongw\"\r\n}"
                },
                "user_api_test/닉네임_변경_성공_200/" : {
                  "value" : "{\r\n  \"nickname\" : \"asdf\"\r\n}"
                },
                "user_api_test/닉네임_변경_토큰없음_401/" : {
                  "value" : "{\r\n  \"nickname\" : \"asdf\"\r\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_닉네임중복_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"중복되는 닉네임입니다.\",\r\n  \"errorType\" : \"DuplicateNicknameException\",\r\n  \"fieldName\" : \"nickname\"\r\n} ]"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-signup2062416360"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"nickname\" : \"asdf\"\r\n}"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "401",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/start-hello486549215"
                },
                "examples" : {
                  "user_api_test/닉네임_변경_토큰없음_401/" : {
                    "value" : "{\r\n  \"message\" : \"토큰이 유효하지 않습니다.\",\r\n  \"errorType\" : \"TokenInvalidException\",\r\n  \"fieldName\" : \"\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/signup" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "회원가입",
        "description" : "회원 가입을 처리하는 API 입니다.<br>성공적으로 회원가입이 이루어진 경우, 200 OK 와 함께 이메일과 닉네임 정보가 반환됩니다.<br>검증 로직에 맞지 않는 입력값을 넣었을 때, 400 Bad Request 가 반환됩니다. <br>이메일 검증이 이루어지지 않은 사용자가 가입을 시도할 경우, 403 Forbidden 이 반환됩니다.<br>이때, 이메일 인증 이후 30분 이상 가입이 진행되지 않았을 경우, 인증이 취소된 것으로 간주되며<br>새로 인증을 진행해야 합니다.<br>이미 가입된 이메일의 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "user_api_test/회원가입_성공_200/",
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-signup2062416360"
                },
                "examples" : {
                  "user_api_test/회원가입_성공_200/" : {
                    "value" : "{\r\n  \"email\" : \"ndw8200@naver.com\",\r\n  \"nickname\" : \"dongw\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/exists/{nickname}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "닉네임 중복체크",
        "description" : "닉네임 중복검사를 수행하는 API 입니다.<br>닉네임이 기존 가입된 닉네임과 중복되지 않았을 경우, 200 OK 만 반환됩니다.<br>이미 가입되어 중복되는 경우, 409 Conflict 가 반환됩니다.",
        "operationId" : "user_api_test/닉네임_중복체크_",
        "parameters" : [ {
          "name" : "nickname",
          "in" : "path",
          "description" : "닉네임",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200"
          },
          "409" : {
            "description" : "409",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user-nickname-1708490688"
                },
                "examples" : {
                  "user_api_test/닉네임_중복체크_중복_409/" : {
                    "value" : "[ {\r\n  \"message\" : \"중복되는 닉네임입니다.\",\r\n  \"errorType\" : \"DuplicateNicknameException\",\r\n  \"fieldName\" : \"nickname\"\r\n} ]"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "auth-login328342784" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "type" : "string",
            "description" : "인증 타입"
          },
          "tokenType" : {
            "type" : "string",
            "description" : "토큰 타입"
          },
          "accessToken" : {
            "type" : "string",
            "description" : "access token"
          }
        }
      },
      "email-verify-send1357172838" : {
        "required" : [ "targetEmail" ],
        "type" : "object",
        "properties" : {
          "targetEmail" : {
            "type" : "string",
            "description" : "인증번호를 보내려는 이메일"
          }
        }
      },
      "user-nickname-520340433" : {
        "required" : [ "nickname" ],
        "type" : "object",
        "properties" : {
          "nickname" : {
            "type" : "string",
            "description" : "변경하고자 하는 닉네임"
          }
        }
      },
      "auth-login-83566640" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "비밀번호"
          },
          "email" : {
            "type" : "string",
            "description" : "아이디"
          }
        }
      },
      "user-signup2062416360" : {
        "type" : "object",
        "properties" : {
          "nickname" : {
            "type" : "string",
            "description" : "닉네임"
          },
          "email" : {
            "type" : "string",
            "description" : "이메일"
          }
        }
      },
      "email-verify-check1025472966" : {
        "required" : [ "targetEmail", "verifyCode" ],
        "type" : "object",
        "properties" : {
          "verifyCode" : {
            "type" : "string",
            "description" : "들어온 인증번호"
          },
          "targetEmail" : {
            "type" : "string",
            "description" : "인증번호를 보낸 이메일"
          }
        }
      },
      "email-verify-check-123477478" : {
        "type" : "object",
        "properties" : {
          "targetEmail" : {
            "type" : "string",
            "description" : "인증 번호를 보낸 이메일"
          },
          "verified" : {
            "type" : "boolean",
            "description" : "인증 확인"
          }
        }
      },
      "user-nickname-1708490688" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "fieldName" : {
              "type" : "string",
              "description" : "에러난 필드이름"
            },
            "errorType" : {
              "type" : "string",
              "description" : "에러타입"
            },
            "message" : {
              "type" : "string",
              "description" : "에러메세지"
            }
          }
        }
      },
      "start-hello486549215" : {
        "type" : "object"
      }
    }
  }
}